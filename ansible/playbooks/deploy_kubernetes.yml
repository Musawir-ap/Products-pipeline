---
- name: Deploy Application to Kubernetes
  hosts: localhost
  tasks:

    # Check if K3s is installed
    - name: Check if K3s is installed
      ansible.builtin.command: k3s --version
      register: k3s_installed
      ignore_errors: true
      changed_when: false

    # Install K3s if not already installed
    - name: Download K3s installation script
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: /tmp/get-k3s.sh
        mode: '0755'
      when: k3s_installed.rc != 0
      changed_when: true

    - name: Install K3s
      ansible.builtin.shell: |
        set -o pipefail
        /tmp/get-k3s.sh
      when: k3s_installed.rc != 0
      changed_when: true

    # Configure kubectl only if K3s is installed
    # - name: Configure kubectl
    #   ansible.builtin.command: ln -s /usr/local/bin/k3s /usr/local/bin/kubectl
    #   when: k3s_installed.rc == 0
    #   changed_when: true
    #   become: true
    - name: Configure kubectl
      ansible.builtin.file:
        src: /usr/local/bin/k3s
        dest: /usr/local/bin/kubectl
        state: link
      become: true

    # Display K3s version
    - name: Display K3s version
      ansible.builtin.debug:
        var: k3s_installed.stdout

    # Create the namespace for the application
    - name: Create namespace if it doesn't exist
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: products-app

    # Apply MySQL Secrets
    - name: Apply MySQL Secrets
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/secrets/mysql-secret.yaml') }}"
        namespace: products-app

    # Apply ConfigMap for MySQL Init Script
    - name: Apply ConfigMap for MySQL Init Script
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/configmaps/mysql-initdb-config.yaml') }}"
        namespace: products-app

    # Apply MySQL Persistent Volume Claim
    - name: Apply MySQL PVC
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/pvc/mysql-pvc.yaml') }}"
        namespace: products-app

    # Apply MySQL Deployment
    - name: Apply MySQL Deployment
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/deployments/mysql.yaml') }}"
        namespace: products-app

    # Apply MySQL Service
    - name: Apply MySQL Service
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/services/mysql.yaml') }}"
        namespace: products-app

    # Apply Web App Deployment
    - name: Apply Web App Deployment
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/deployments/webapp.yaml') }}"
        namespace: products-app

    # Apply Web App Service
    - name: Apply Web App Service
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '../../k8s/services/webapp.yaml') }}"
        namespace: products-app
